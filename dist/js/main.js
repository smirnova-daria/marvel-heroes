(()=>{"use strict";const t=class{constructor(t){this._root=t,this.prepareTemplate()}get root(){return this._root}get template(){return this._template}prepareTemplate(){this._template=document.createElement("div")}initTemplate(){if(this._template)return this._template.innerHTML=""}render(t){t&&(this._root=t),this.initTemplate();const{root:e,template:s}=this;e&&e.append(s)}},e=class extends t{constructor(t={},e){super(e),this._data=t}initTemplate(){if(!this._template)return;this._template.classList.add("card");let t=`<div class="card__photo"><img src="${this._data.photo}" alt="${this._data.name}"/></div>`;for(let e in this._data)"photo"!==e&&"movies"!==e&&(t+=`<p class="card__${e}">${e}: <span>${this._data[e]}</span></p>`);this._data.movies&&(t+='<p class="card__movies">Movies:</p><ul class="card__movies-list">',this._data.movies.forEach((e=>{t+=`<li class="card__movie-item">${e}</li>`})),t+="</ul>"),this._template.innerHTML=t}},s=class extends t{constructor(t,e=[]){super(t),this.createCardsObjectsList(e)}createCardsObjectsList(t){this._cards=t.map((t=>new e(t)))}get cards(){return this._cards}initTemplate(){this._template&&(this._template.classList.add("cards-list"),this.cards.forEach((t=>t.render(this._template))))}};fetch("dbHeroes.json").then((t=>t.json())).then((t=>{new s(document.body,t).render()})).catch((t=>console.log("Произошла ошибка "+t)))})();